// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Auth0WithRedis.Models;

namespace Auth0WithRedis.Data
{
    public partial class DimoDBContext : DbContext
    {
        public DimoDBContext()
        {
        }

        public DimoDBContext(DbContextOptions<DimoDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AuthLogin> AuthLogin { get; set; }
        public virtual DbSet<AuthUsers> AuthUsers { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<AuthLogin>(entity =>
            {
                entity.ToTable("AUTH_LOGIN");

                entity.Property(e => e.AuthUserId).HasColumnName("AUTH_USER_ID");

                entity.Property(e => e.CreatedAt)
                    .HasColumnName("created_at")
                    .HasDefaultValueSql("(sysdatetime())");

                entity.Property(e => e.Ip)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Location)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Os)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.RefreshToken)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("refresh_token");

                entity.Property(e => e.UpdatedAt)
                    .HasColumnName("updated_at")
                    .HasDefaultValueSql("(sysdatetime())");

                entity.HasOne(d => d.AuthUser)
                    .WithMany(p => p.AuthLogin)
                    .HasForeignKey(d => d.AuthUserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_AUTH_LOGIN_AUTH_USER");
            });

            modelBuilder.Entity<AuthUsers>(entity =>
            {
                entity.ToTable("AUTH_USERS");

                entity.Property(e => e.Id).HasDefaultValueSql("(newid())");

                entity.Property(e => e.Email)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.FirstName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.LastName)
                    .HasMaxLength(255)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .HasMaxLength(255)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}